# Generated by Django 4.2.11 on 2024-05-19 04:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CertificationsDetail',
            fields=[
                ('certificationsDetailPKID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='certificationsDetailPKID')),
                ('userModelPKID', models.CharField(blank=True, max_length=255, null=True)),
                ('technology', models.CharField(blank=True, max_length=255, null=True)),
                ('certificationName', models.CharField(blank=True, max_length=255, null=True)),
                ('certificationId', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('uploadedCertificateName', models.CharField(blank=True, max_length=1000, null=True)),
                ('certificateNeverExpires', models.CharField(blank=True, max_length=255, null=True)),
                ('certificationFromYear', models.CharField(blank=True, max_length=255, null=True)),
                ('certificationToYear', models.CharField(blank=True, max_length=255, null=True)),
                ('certificationsDetailCreatedDate', models.DateTimeField(auto_now_add=True)),
                ('certificationsDetailUpdatedDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'CertificationsDetail',
            },
        ),
        migrations.CreateModel(
            name='EducationDetail',
            fields=[
                ('educationDetailPKID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='educationDetailPKID')),
                ('userModelPKID', models.CharField(blank=True, max_length=255, null=True)),
                ('education', models.CharField(blank=True, max_length=255, null=True)),
                ('university', models.CharField(blank=True, max_length=255, null=True)),
                ('course', models.CharField(blank=True, max_length=255, null=True)),
                ('specialization', models.CharField(blank=True, max_length=255, null=True)),
                ('mark', models.CharField(blank=True, max_length=255, null=True)),
                ('modeOfLearning', models.CharField(blank=True, max_length=255, null=True)),
                ('fromYear', models.CharField(blank=True, max_length=255, null=True)),
                ('toYear', models.CharField(blank=True, max_length=255, null=True)),
                ('educationDetailCreatedDate', models.DateTimeField(auto_now_add=True)),
                ('educationDetailUpdatedDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'EducationDetail',
            },
        ),
        migrations.CreateModel(
            name='ImageTable',
            fields=[
                ('imageTablePKID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='imageTablePKID')),
                ('imageName', models.CharField(blank=True, max_length=255, null=True)),
                ('imageURL', models.CharField(blank=True, max_length=255, null=True)),
                ('imageStatus', models.CharField(blank=True, max_length=255, null=True)),
                ('imageDescription', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ImageTable',
            },
        ),
        migrations.CreateModel(
            name='JobSeekerProfile',
            fields=[
                ('jobSeekerProfilePKID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='jobSeekerProfilePKID')),
                ('userModelPKID', models.CharField(blank=True, max_length=255, null=True)),
                ('salutation', models.CharField(blank=True, max_length=20, null=True)),
                ('firstName', models.CharField(blank=True, max_length=100, null=True)),
                ('lastName', models.CharField(blank=True, max_length=100, null=True)),
                ('totalExperience', models.CharField(blank=True, max_length=20, null=True)),
                ('trainingExp', models.CharField(blank=True, max_length=20, null=True)),
                ('mobileNumber', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('currentLocationCountry', models.CharField(blank=True, max_length=100, null=True)),
                ('currentLocationState', models.CharField(blank=True, max_length=100, null=True)),
                ('profilePictureName', models.CharField(blank=True, max_length=1000, null=True)),
                ('uploadedResumeName', models.CharField(blank=True, max_length=1000, null=True)),
                ('S3BucketURL', models.CharField(blank=True, max_length=255, null=True)),
                ('travelWithInYourCountry', models.CharField(blank=True, max_length=25, null=True)),
                ('travelOutSideCountry', models.CharField(blank=True, max_length=25, null=True)),
                ('workingTimeZone', models.CharField(blank=True, max_length=2000, null=True)),
                ('skills', models.CharField(blank=True, max_length=2000, null=True)),
                ('socialMedia', jsonfield.fields.JSONField(blank=True, null=True)),
                ('profileCompleteScore', models.CharField(blank=True, max_length=20, null=True)),
                ('jobSeekerProfileCreatedDate', models.DateTimeField(auto_now_add=True)),
                ('jobSeekerProfileUpdatedDate', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'JobSeekerProfile',
            },
        ),
        migrations.CreateModel(
            name='PersonalDetail',
            fields=[
                ('personalDetailPKID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='personalDetailPKID')),
                ('userModelPKID', models.CharField(blank=True, max_length=255, null=True)),
                ('dob', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('martialStatus', models.CharField(blank=True, max_length=255, null=True)),
                ('secSalutation', models.CharField(blank=True, max_length=255, null=True)),
                ('secFirstName', models.CharField(blank=True, max_length=255, null=True)),
                ('secLastName', models.CharField(blank=True, max_length=255, null=True)),
                ('secContactCountryCode', models.CharField(blank=True, max_length=255, null=True)),
                ('secondaryNumber', models.CharField(blank=True, max_length=255, null=True)),
                ('emgSalutation', models.CharField(blank=True, max_length=255, null=True)),
                ('emgFirstName', models.CharField(blank=True, max_length=255, null=True)),
                ('emgLastName', models.CharField(blank=True, max_length=255, null=True)),
                ('emgContactCountryCode', models.CharField(blank=True, max_length=255, null=True)),
                ('emergencyNumber', models.CharField(blank=True, max_length=255, null=True)),
                ('aadharNumber', models.CharField(blank=True, max_length=255, null=True)),
                ('panNumber', models.CharField(blank=True, max_length=255, null=True)),
                ('passportNumber', jsonfield.fields.JSONField(blank=True, null=True)),
                ('address', jsonfield.fields.JSONField(blank=True, null=True)),
                ('languages', jsonfield.fields.JSONField(blank=True, null=True)),
                ('visa', models.CharField(blank=True, max_length=255, null=True)),
                ('visaInfo', jsonfield.fields.JSONField(blank=True, null=True)),
                ('differentlyAbled', models.CharField(blank=True, max_length=255, null=True)),
                ('personalDetailCreatedData', models.DateTimeField(auto_now_add=True)),
                ('personalDetailUpdatedData', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'PersonalDetail',
            },
        ),
        migrations.CreateModel(
            name='ProfileScoreDetail',
            fields=[
                ('ProfileScoreDetailPKID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='statusFlowPKID')),
                ('sectionDescription', models.CharField(blank=True, max_length=200, null=True)),
                ('score', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'ProfileScoreDetail',
            },
        ),
        migrations.CreateModel(
            name='SkillsDetails',
            fields=[
                ('skillsDetailsPKID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='skillsDetailsPKID')),
                ('skillName', models.CharField(blank=True, max_length=2000, null=True)),
                ('skillStatus', models.CharField(blank=True, max_length=20, null=True)),
                ('skillsDetailsCreatedDate', models.DateTimeField(auto_now_add=True)),
                ('skillsDetailsUpdatedDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'SkillsDetails',
            },
        ),
        migrations.CreateModel(
            name='TrainingExperience',
            fields=[
                ('trainingExperiencePKID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='trainingExperiencePKID')),
                ('userModelPKID', models.CharField(blank=True, max_length=255, null=True)),
                ('profileName', models.CharField(blank=True, max_length=255, null=True)),
                ('trainingTechnology', models.CharField(blank=True, max_length=255, null=True)),
                ('clientDelivered', models.CharField(blank=True, max_length=255, null=True)),
                ('trainingDuration', models.CharField(blank=True, max_length=255, null=True)),
                ('totalNoOfTrainings', models.CharField(blank=True, max_length=255, null=True)),
                ('dateOfLastTraining', models.CharField(blank=True, max_length=255, null=True)),
                ('totalTrainingExperience', models.CharField(blank=True, max_length=255, null=True)),
                ('deliveryMethod', models.CharField(blank=True, max_length=255, null=True)),
                ('demoLink', models.CharField(blank=True, max_length=255, null=True)),
                ('uploadedFeedbackName', models.CharField(blank=True, max_length=1000, null=True)),
                ('uploadedTocName', models.CharField(blank=True, max_length=1000, null=True)),
                ('projectTitle', models.CharField(blank=True, max_length=255, null=True)),
                ('projectDescription', models.CharField(blank=True, max_length=255, null=True)),
                ('selectedCommercialsCurrency', models.CharField(blank=True, max_length=255, null=True)),
                ('commercialsCurrency', models.CharField(blank=True, max_length=255, null=True)),
                ('forLessThan4hrs', models.CharField(blank=True, max_length=255, null=True)),
                ('for4hrs', models.CharField(blank=True, max_length=255, null=True)),
                ('for8hrs', models.CharField(blank=True, max_length=255, null=True)),
                ('trainingExperienceCreatedDate', models.DateTimeField(auto_now_add=True)),
                ('trainingExperienceUpdatedDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'TrainingExperience',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('workExperiencePKID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userModelPKID', models.CharField(blank=True, max_length=255, null=True)),
                ('companyName', models.CharField(blank=True, max_length=255, null=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('technology', models.CharField(blank=True, max_length=255, null=True)),
                ('employmentType', models.CharField(blank=True, max_length=255, null=True)),
                ('dateOfJoining', models.CharField(blank=True, max_length=255, null=True)),
                ('dateOfLeaving', models.CharField(blank=True, max_length=255, null=True)),
                ('jobProfile', models.CharField(blank=True, max_length=255, null=True)),
                ('workExperienceCreatedDate', models.DateTimeField(auto_now_add=True)),
                ('workExperienceUpdatedDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'WorkExperience',
            },
        ),
        migrations.CreateModel(
            name='WorkSample',
            fields=[
                ('workSamplePKID', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='workSamplePKID')),
                ('userModelPKID', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=2550, null=True)),
                ('workUrl', models.CharField(blank=True, max_length=2550, null=True)),
                ('uploadedWorkSampleName', models.CharField(blank=True, max_length=1000, null=True)),
                ('workSampleCreatedDate', models.DateTimeField(auto_now_add=True)),
                ('workSampleUpdatedDate', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'WorkSample',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('userCreatedDate', models.DateTimeField(auto_now_add=True)),
                ('userUpdatedDate', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(db_index=True, max_length=255)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('mobile_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_verified_tc', models.BooleanField(default=False)),
                ('is_verified_mobile', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('auth_provider', models.CharField(default='email', max_length=255)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='uniquegroup', to='auth.group')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
